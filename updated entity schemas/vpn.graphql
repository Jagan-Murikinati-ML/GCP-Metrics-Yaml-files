"""
GCP VPN provides secure connectivity between your on-premises network and your Google Cloud VPC network through an IPSec VPN connection.
"""
type GcpVpn implements Entity & HealthEntity @key(fields: "id")
@telemetryMappingCondition(conditions: [
    {key: "sw.cloud.gcp.vpn.name"},
    {key: "cloud.provider", values: ["gcp"]}
])
{
    # inherited from base Entity
    """
    Unique identifier of an entity
    """
    id: ID!

    """
    Entity type.
    """
    type: String!

    """
    VPN gateway or tunnel name.
    """
    name: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.name"]) @property(filterable: true, sortable: true)

    """
    Entity display name / alias. This value is equal to `name` unless it's explicitly overriden.
    """
    displayName: String

    """
    Date and time of entity creation in UTC.
    """
    createdTime: String

    """
    Date and time of last entity update in UTC.
    """
    updatedTime: String

    """
    Date and time when the entity has last received telemetry in UTC.
    """
    lastSeenTime: String

    """
    How long the entity may not be receiving updates/telemetry before it should be considered "unknown".
    The platform may stop doing certain things with the entity when it is in unknown state.
    """
    maxUnknownPeriodMinutes: Int

    """
    Flag telling if given entity is in maintenance mode.
    """
    inMaintenance: Boolean

    """
    Flag telling if given entity is in unknown state.
    Entity gets to unknown state if it doesn't receive eny telemetry for more than 'maxUnknownPeriodMinutes'.
    """
    isUnknown: Boolean

    """
    Set of fields to get to things related to a given entity
    """
    related: RelatedEntityFields

    """
    List of entity extensions that are currently set on given entity
    """
    extensions: [String!] @property(collectionType: SET)

    """
    Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key.
    """
    tags: [KeyValuePair!]

    healthScore: HealthScore

    """
    Cloud provider Name
    """
    cloudProvider: String @telemetryMapping(resourceAttributes: ["cloud.provider"]) @property(
        filterable: false,
        groupable: true,
        sortable: true,
        logicalType: "CloudProviderOption"
    )

    """
    Cloud Account to which this VPN belongs.
    """
    cloudAccount: CloudAccount @relationship(type: "Has", direction: IN) @telemetryRelationship

    """
    GCP Account Number
    """
    cloudAccountNumber: String! @telemetryMapping(resourceAttributes:["cloud.project.id"])

    """
    The cloud account Entity ID
    """
    cloudAccountEntityId: String @telemetryMapping(resourceAttributes: ["sw.entity.cloudaccount.id"])

    """
    Unique ID within SWO to indentify the resource based on cloud attributes
    """
    swid: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.swid"], hashKeyOrder: 1)

    """
    service category to which it belongs to eg: Networking, Database, Compute.
    """
    serviceCategory: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.service.category"])

    """
    Separate geographic area that GCP uses to house its infrastructure.
    """
    region: String! @telemetryMapping(resourceAttributes: ["cloud.region"]) @property(filterable: true)

    """
    Description of the VPN Gateway or Tunnel.
    """
    description: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.description"]) @property(filterable: true, sortable: true)

    """
    VPC network associated with the VPN Gateway.
    """
    network: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.network"]) @property(filterable: true, sortable: true)

    """
    IP stack type supported by the VPN Gateway (IPV4_ONLY, DUAL_STACK).
    """
    stackType: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.stack.type"]) @property(filterable: true, sortable: true)

    """
    IP version supported by the VPN Gateway.
    """
    gatewayIpVersion: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.gateway.ip.version"]) @property(filterable: true, sortable: true)

    """
    VPN interfaces configuration including ID and connection details.
    """
    vpnInterfaces: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.interfaces"]) @property(filterable: true, sortable: true)

    """
    VPN Gateway interface used for the connection.
    """
    vpnGatewayInterface: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.gateway.interface"]) @property(filterable: true, sortable: true)

    """
    External peer gateway for VPN connection.
    """
    peerExternalGateway: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.peer.external.gateway"]) @property(filterable: true, sortable: true)

    """
    GCP peer gateway for VPN connection.
    """
    peerGcpGateway: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.peer.gcp.gateway"]) @property(filterable: true, sortable: true)

    """
    Cloud Router associated with the VPN connection.
    """
    router: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.router"]) @property(filterable: true, sortable: true)

    """
    Peer IP address for the VPN connection.
    """
    peerIp: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.peer.ip"]) @property(filterable: true, sortable: true)

    """
    Current status of the VPN tunnel or gateway.
    """
    status: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.status"]) @property(filterable: true, sortable: true)

    """
    IKE version used for the VPN connection.
    """
    ikeVersion: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.ike.version"]) @property(filterable: true, sortable: true)

    """
    Detailed status information for the VPN connection.
    """
    detailedStatus: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.detailed.status"]) @property(filterable: true, sortable: true)

    """
    Local traffic selectors for the VPN tunnel.
    """
    localTrafficSelector: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.local.traffic.selector"]) @property(filterable: true, sortable: true)

    """
    Remote traffic selectors for the VPN tunnel.
    """
    remoteTrafficSelector: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpn.remote.traffic.selector"]) @property(filterable: true, sortable: true)

    # VPN Core Metrics
    """
    Status indicating if VPN tunnel is established and operational.
    """
    tunnelEstablished: Metric! @metric(name: "gcp.vpn.googleapis.com.tunnel_established", units: "ratio")

    """
    Number of active connections through the VPN gateway.
    """
    gatewayConnections: Metric! @metric(name: "gcp.vpn.googleapis.com.gateway.connections", units: "count")

    """
    Count of received packets that were dropped by the VPN.
    """
    networkDroppedReceivedPacketsCount: Metric! @metric(name: "gcp.vpn.googleapis.com.network.dropped_received_packets_count", units: "count")

    """
    Count of sent packets that were dropped by the VPN.
    """
    networkDroppedSentPacketsCount: Metric! @metric(name: "gcp.vpn.googleapis.com.network.dropped_sent_packets_count", units: "count")

    """
    Count of bytes received through the VPN network.
    """
    networkReceivedBytesCount: Metric! @metric(name: "gcp.vpn.googleapis.com.network.received_bytes_count", units: "count")

    """
    Count of packets received through the VPN network.
    """
    networkReceivedPacketsCount: Metric! @metric(name: "gcp.vpn.googleapis.com.network.received_packets_count", units: "count")

    """
    Count of bytes sent through the VPN network.
    """
    networkSentBytesCount: Metric! @metric(name: "gcp.vpn.googleapis.com.network.sent_bytes_count", units: "count")

    """
    Count of packets sent through the VPN network.
    """
    networkSentPacketsCount: Metric! @metric(name: "gcp.vpn.googleapis.com.network.sent_packets_count", units: "count")

    # VPN Tunnel Networking Metrics
    """
    Count of bytes sent through VPN tunnel egress.
    """
    vpnTunnelEgressBytesCount: Metric! @metric(name: "gcp.networking.googleapis.com.vpn_tunnel.egress_bytes_count", units: "count")

    """
    Count of bytes received through VPN tunnel ingress.
    """
    vpnTunnelIngressBytesCount: Metric! @metric(name: "gcp.networking.googleapis.com.vpn_tunnel.ingress_bytes_count", units: "count")

    """
    Count of bytes sent through VPN tunnel from virtual machines egress.
    """
    vpnTunnelVmEgressBytesCount: Metric! @metric(name: "gcp.networking.googleapis.com.vpn_tunnel.vm.egress_bytes_count", units: "count")

    """
    Count of bytes received through VPN tunnel to virtual machines ingress.
    """
    vpnTunnelVmIngressBytesCount: Metric! @metric(name: "gcp.networking.googleapis.com.vpn_tunnel.vm.ingress_bytes_count", units: "count")
}