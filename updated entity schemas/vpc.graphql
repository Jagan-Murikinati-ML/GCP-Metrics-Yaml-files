"""
GCP VPC (Virtual Private Cloud) provides networking functionality to Compute Engine virtual machine instances, Google Kubernetes Engine clusters, and other Google Cloud resources.
"""
type GcpVpc implements Entity & HealthEntity @key(fields: "id")
@telemetryMappingCondition(conditions: [
    {key: "sw.cloud.gcp.vpc.network.name"},
    {key: "cloud.provider", values: ["gcp"]}
])
{
    """
    Unique identifier of an entity
    """
    id: ID! 

    """
    Entity type.
    """
    type: String! 

    """
    VPC network name.
    """
    name: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.network.name"]) @property(filterable: true, sortable: true) 

    """
    Entity display name / alias. This value is equal to `name` unless it's explicitly overriden.
    """
    displayName: String 

    """
    Date and time of entity creation in UTC.
    """
    createdTime: String 

    """
    Date and time of last entity update in UTC.
    """
    updatedTime: String 

    """
    Date and time when the entity has last received telemetry in UTC.
    """
    lastSeenTime: String 

    """
    How long the entity may not be receiving updates/telemetry before it should be considered "unknown".
    The platform may stop doing certain things with the entity when it is in unknown state.
    """
    maxUnknownPeriodMinutes: Int 

    """
    Flag telling if given entity is in maintenance mode.
    """
    inMaintenance: Boolean 

    """
    Flag telling if given entity is in unknown state.
    Entity gets to unknown state if it doesn't receive eny telemetry for more than 'maxUnknownPeriodMinutes'.
    """
    isUnknown: Boolean 

    """
    Set of fields to get to things related to a given entity
    """
    related: RelatedEntityFields 

    """
    List of entity extensions that are currently set on given entity
    """
    extensions: [String!] @property(collectionType: SET) 

    """
    Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key.
    """
    tags: [KeyValuePair!] 

    healthScore: HealthScore 

    """
    Cloud provider Name
    """
    cloudProvider: String @telemetryMapping(resourceAttributes: ["cloud.provider"]) @property(
        filterable: false,
        groupable: true,
        sortable: true,
        logicalType: "CloudProviderOption"
    ) 

    """
    Cloud Account to which this VPC belongs.
    """
    cloudAccount: CloudAccount @relationship(type: "Has", direction: IN) @telemetryRelationship 

    """
    GCP Account Number
    """
    cloudAccountNumber: String! @telemetryMapping(resourceAttributes:["cloud.project.id"]) 

    """
    The cloud account Entity ID
    """
    cloudAccountEntityId: String @telemetryMapping(resourceAttributes: ["sw.entity.cloudaccount.id"]) 

    """
    Unique ID within SWO to indentify the resource based on cloud attributes
    """
    swid: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.network.swid"], hashKeyOrder: 1) 

    """
    service category to which it belongs to eg: Networking, Database, Compute.
    """
    serviceCategory: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.service.category"]) 

    """
    Separate geographic area that GCP uses to house its infrastructure.
    """
    region: String! @telemetryMapping(resourceAttributes: ["cloud.region"]) @property(filterable: true) 

    """
    Description of the VPC network
    """
    description: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.network.description"]) @property(filterable: true, sortable: true)

    """
    Whether the VPC automatically creates subnetworks
    """
    autoCreateSubnetworks: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.network.auto.create.subnetworks"]) @property(filterable: true, sortable: true)

    """
    Name of the VPC peering connection
    """
    peeringsName: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.peerings.name"]) @property(filterable: true, sortable: true)

    """
    Network involved in the VPC peering
    """
    peeringsNetwork: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.peerings.network"]) @property(filterable: true, sortable: true)

    """
    State of the VPC peering connection
    """
    peeringsState: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.peerings.state"]) @property(filterable: true, sortable: true)

    """
    State details of the VPC peering connection
    """
    peeringsStateDetails: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.peerings.state.details"]) @property(filterable: true, sortable: true)

    """
    Stack type of the VPC peering connection
    """
    peeringsStackType: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.peerings.stack.type"]) @property(filterable: true, sortable: true)

    """
    Routing mode configured for the VPC network
    """
    routingConfigRoutingMode: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.vpc.routing.config.routing.mode"]) @property(filterable: true, sortable: true)

    """
    Indicates if instances per VPC network quota has been exceeded
    """
    quotaInstancesPerVpcNetworkExceeded: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.instances_per_vpc_network.exceeded", units: "boolean")

    """
    Current usage of instances per VPC network quota
    """
    quotaInstancesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.instances_per_vpc_network.usage", units: "count")

    """
    Indicates if IP aliases per VPC network quota has been exceeded
    """
    quotaIpAliasesPerVpcNetworkExceeded: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.ip_aliases_per_vpc_network.exceeded", units: "boolean")

    """
    Current usage of IP aliases per VPC network quota
    """
    quotaIpAliasesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.ip_aliases_per_vpc_network.usage", units: "count")

    """
    Indicates if peerings per VPC network quota has been exceeded
    """
    quotaPeeringsPerVpcNetworkExceeded: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.peerings_per_vpc_network.exceeded", units: "boolean")

    """
    Current usage of peerings per VPC network quota
    """
    quotaPeeringsPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.peerings_per_vpc_network.usage", units: "count")

    """
    Indicates if subnet ranges per VPC network quota has been exceeded
    """
    quotaSubnetRangesPerVpcNetworkExceeded: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.subnet_ranges_per_vpc_network.exceeded", units: "boolean")

    """
    Current usage of subnet ranges per VPC network quota
    """
    quotaSubnetRangesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.subnet_ranges_per_vpc_network.usage", units: "count")

    """
    Indicates if internal load balancer forwarding rules per VPC network quota has been exceeded
    """
    quotaInternalLbForwardingRulesPerVpcNetworkExceeded: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.internal_lb_forwarding_rules_per_vpc_network.exceeded", units: "boolean")

    """
    Current usage of internal load balancer forwarding rules per VPC network quota
    """
    quotaInternalLbForwardingRulesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.internal_lb_forwarding_rules_per_vpc_network.usage", units: "count")

    """
    Indicates if internal managed forwarding rules per VPC network quota has been exceeded
    """
    quotaInternalManagedForwardingRulesPerVpcNetworkExceeded: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.internal_managed_forwarding_rules_per_vpc_network.exceeded", units: "boolean")

    """
    Current usage of internal managed forwarding rules per VPC network quota
    """
    quotaInternalManagedForwardingRulesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.internal_managed_forwarding_rules_per_vpc_network.usage", units: "count")

    """
    Current usage of dynamic routes per region per peering group quota
    """
    quotaDynamicRoutesPerRegionPerPeeringGroupUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.dynamic_routes_per_region_per_peering_group.usage", units: "count")

    """
    Current usage of static routes per VPC network quota
    """
    quotaStaticRoutesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.static_routes_per_vpc_network.usage", units: "count")

    """
    Indicates if PSC Google APIs forwarding rules per VPC network quota has been exceeded
    """
    quotaPscGoogleApisForwardingRulesPerVpcNetworkExceeded: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.psc_google_apis_forwarding_rules_per_vpc_network.exceeded", units: "boolean")

    """
    Current usage of PSC Google APIs forwarding rules per VPC network quota
    """
    quotaPscGoogleApisForwardingRulesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.psc_google_apis_forwarding_rules_per_vpc_network.usage", units: "count")

    """
    Current usage of Cloud Router prefixes from other regions per region per VPC network quota
    """
    quotaCloudRouterPrefixesFromOtherRegionsPerRegionPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.cloud_router_prefixes_from_other_regions_per_region_per_vpc_network.usage", units: "count")

    """
    Current usage of internal protocol forwarding rules per VPC network quota
    """
    quotaInternalProtocolForwardingRulesPerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.internal_protocol_forwarding_rules_per_vpc_network.usage", units: "count")

    """
    Current usage of PSC ILB consumer forwarding rules per producer VPC network quota
    """
    quotaPscIlbConsumerForwardingRulesPerProducerVpcNetworkUsage: Metric! @metric(name: "gcp.vpc.googleapis.com.quota.psc_ilb_consumer_forwarding_rules_per_producer_vpc_network.usage", units: "count")
}