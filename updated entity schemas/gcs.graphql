"""
GCP Cloud Storage also referred to as GCS is a service for storing and retrieving data on Google's infrastructure.
"""
type GcpCloudStorage implements Entity & HealthEntity @key(fields: "id")
@telemetryMappingCondition(conditions: [
    {key: "sw.cloud.gcp.gcs.bucket.name"},
    {key: "cloud.provider", values: ["gcp"]}
])
{
    # inherited from base Entity
    """
    Unique identifier of an entity
    """
    id: ID!

    """
    Entity type.
    """
    type: String!

    """
    GCS bucket name.
    """
    name: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.gcs.bucket.name"]) @property(filterable: true, sortable: true)

    """
    Entity display name / alias. This value is equal to `name` unless it's explicitly overriden.
    """
    displayName: String

    """
    Date and time of entity creation in UTC.
    """
    createdTime: String

    """
    Date and time of last entity update in UTC.
    """
    updatedTime: String

    """
    Date and time when the entity has last received telemetry in UTC.
    """
    lastSeenTime: String

    """
    How long the entity may not be receiving updates/telemetry before it should be considered "unknown".
    The platform may stop doing certain things with the entity when it is in unknown state.
    """
    maxUnknownPeriodMinutes: Int
    """
    Flag telling if given entity is in maintenance mode.
    """
    inMaintenance: Boolean
    """
    Flag telling if given entity is in unknown state.
    Entity gets to unknown state if it doesn't receive eny telemetry for more than 'maxUnknownPeriodMinutes'.
    """
    isUnknown: Boolean


    """
    Set of fields to get to things related to a given entity
    """
    related: RelatedEntityFields

    """
    List of entity extensions that are currently set on given entity
    """
    extensions: [String!] @property(collectionType: SET)
    """
    Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key.
    """
    tags: [KeyValuePair!]

    healthScore: HealthScore

    """
    Cloud provider Name
    """
    cloudProvider: String @telemetryMapping(resourceAttributes: ["cloud.provider"]) @property(
        filterable: false,
        groupable: true,
        sortable: true,
        logicalType: "CloudProviderOption"
    )

    """
    Types of storage.
    """
    storageClass: String @telemetryMapping(resourceAttributes: ["bucket.storageClass"])

    """
    Cloud Account to which this GCS belongs.
    """
    cloudAccount: CloudAccount @relationship(type: "Has", direction: IN) @telemetryRelationship


    """
    GCP Account Number
    """
    cloudAccountNumber: String! @telemetryMapping(resourceAttributes:["cloud.project.id"])

    """
    The cloud account Entity ID
    """
    cloudAccountEntityId: String @telemetryMapping(resourceAttributes: ["sw.entity.cloudaccount.id"])

    """
    Unique ID within SWO to indentify the resource based on cloud attributes
    """
    swid: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.gcs.bucket.swid"], hashKeyOrder: 1)

    """
    service category to which it belongs to eg: Networking, Database, Compute.
    """
    serviceCategory: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.service.category"])

    """
    Separate geographic area that GCP uses to house its infrastructure.
    """
    region: String! @telemetryMapping(resourceAttributes: ["cloud.region"]) @property(filterable: true)

    """
    The amount of data in bytes stored in a bucket.
    """
    totalBytes: Metric! @metric(name: "gcp.storage.googleapis.com.storage.totalBytes", units: "bytes")

    """
    The total number of objects stored in a bucket for all storage classes.
    """
    objectCount: Metric! @metric(name: "gcp.storage.googleapis.com.storage.objectCount", units: "count")

    """
    The total number of HTTP requests made to an GCS bucket.
    """
    apiRequestCount: Metric! @metric(name: "gcp.storage.googleapis.com.api.requestCount", units: "count")

    """
    The number of HTTP 4xx client error status code requests made to an GCS bucket.
    """
    totalBytesSeconds: Metric! @metric(name: "gcp.storage.googleapis.com.storage.totalByteSeconds", units: "bytesSeconds")
}