"""
GCP Interconnect provides private connectivity between your on-premises network and your Virtual Private Cloud (VPC) network.
"""
type GcpInterconnect implements Entity & HealthEntity @key(fields: "id")
@telemetryMappingCondition(conditions: [
    {key: "sw.cloud.gcp.interconnect.name"},
    {key: "cloud.provider", values: ["gcp"]}
])
{
    # inherited from base Entity
    """
    Unique identifier of an entity
    """
    id: ID!

    """
    Entity type.
    """
    type: String!

    """
    Interconnect name.
    """
    name: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.interconnect.name"]) @property(filterable: true, sortable: true)

    """
    Entity display name / alias. This value is equal to `name` unless it's explicitly overriden.
    """
    displayName: String

    """
    Date and time of entity creation in UTC.
    """
    createdTime: String

    """
    Date and time of last entity update in UTC.
    """
    updatedTime: String

    """
    Date and time when the entity has last received telemetry in UTC.
    """
    lastSeenTime: String

    """
    How long the entity may not be receiving updates/telemetry before it should be considered "unknown".
    The platform may stop doing certain things with the entity when it is in unknown state.
    """
    maxUnknownPeriodMinutes: Int

    """
    Flag telling if given entity is in maintenance mode.
    """
    inMaintenance: Boolean

    """
    Flag telling if given entity is in unknown state.
    Entity gets to unknown state if it doesn't receive eny telemetry for more than 'maxUnknownPeriodMinutes'.
    """
    isUnknown: Boolean

    """
    Set of fields to get to things related to a given entity
    """
    related: RelatedEntityFields

    """
    List of entity extensions that are currently set on given entity
    """
    extensions: [String!] @property(collectionType: SET)

    """
    Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key.
    """
    tags: [KeyValuePair!]

    healthScore: HealthScore

    """
    Cloud provider Name
    """
    cloudProvider: String @telemetryMapping(resourceAttributes: ["cloud.provider"]) @property(
        filterable: false,
        groupable: true,
        sortable: true,
        logicalType: "CloudProviderOption"
    )

    """
    Cloud Account to which this Interconnect belongs.
    """
    cloudAccount: CloudAccount @relationship(type: "Has", direction: IN) @telemetryRelationship

    """
    GCP Account Number
    """
    cloudAccountNumber: String! @telemetryMapping(resourceAttributes:["cloud.project.id"])

    """
    The cloud account Entity ID
    """
    cloudAccountEntityId: String @telemetryMapping(resourceAttributes: ["sw.entity.cloudaccount.id"])

    """
    Unique ID within SWO to indentify the resource based on cloud attributes
    """
    swid: String @telemetryMapping(resourceAttributes: ["<unique identifier>"], hashKeyOrder: 1)

    """
    service category to which it belongs to eg: Networking, Database, Compute.
    """
    serviceCategory: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.service.category"])

    """
    Separate geographic area that GCP uses to house its infrastructure.
    """
    region: String! @telemetryMapping(resourceAttributes: ["cloud.region"]) @property(filterable: true)

    """
    Physical location of the interconnect facility.
    """
    location: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Type of link used for the interconnect connection.
    """
    linkType: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Number of links requested for the interconnect.
    """
    requestedLinkCount: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Type of interconnect - DEDICATED or PARTNER.
    """
    interconnectType: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Administrative status indicating if interconnect is enabled.
    """
    adminEnabled: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Customer name associated with the interconnect.
    """
    customerName: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Current operational status of the interconnect.
    """
    operationalStatus: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Number of provisioned links for the interconnect.
    """
    provisionedLinkCount: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Current state of the interconnect.
    """
    state: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Whether the interconnect satisfies placement zone requirements.
    """
    satisfiesPzs: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Whether MACsec encryption is enabled on the interconnect.
    """
    macsecEnabled: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Remote location information for the interconnect.
    """
    remoteLocation: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Features requested for the interconnect.
    """
    requestedFeatures: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Features available for the interconnect.
    """
    availableFeatures: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    """
    Interconnect groups associated with this interconnect.
    """
    interconnectGroups: String @telemetryMapping(resourceAttributes: ["<dot separated attribute identifier>"]) @property(filterable: true, sortable: true)

    # Interconnect Network Attachment Metrics
    """
    Network attachment capacity for data transfer.
    """
    networkAttachmentCapacity: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.capacity", units: "bytes")

    """
    Count of bytes received through network attachments.
    """
    networkAttachmentReceivedBytesCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.received_bytes_count", units: "count")

    """
    Count of bytes sent through network attachments.
    """
    networkAttachmentSentBytesCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.sent_bytes_count", units: "count")

    """
    Count of egress packets dropped by network attachments.
    """
    networkAttachmentEgressDroppedPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.egress_dropped_packets_count", units: "count")

    """
    Count of ingress packets dropped by network attachments.
    """
    networkAttachmentIngressDroppedPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.ingress_dropped_packets_count", units: "count")

    """
    Count of packets received through network attachments.
    """
    networkAttachmentReceivedPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.received_packets_count", units: "count")

    """
    Count of packets sent through network attachments.
    """
    networkAttachmentSentPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.sent_packets_count", units: "count")

    """
    Count of bytes received by network attachments grouped by L3 protocol.
    """
    networkAttachmentReceivedBytesCountByL3Protocol: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.received_bytes_count_by_l3_protocol", units: "count")

    """
    Count of packets received by network attachments grouped by L3 protocol.
    """
    networkAttachmentReceivedPacketsCountByL3Protocol: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.received_packets_count_by_l3_protocol", units: "count")

    """
    Count of bytes sent by network attachments grouped by L3 protocol.
    """
    networkAttachmentSentBytesCountByL3Protocol: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.sent_bytes_count_by_l3_protocol", units: "count")

    """
    Count of packets sent by network attachments grouped by L3 protocol.
    """
    networkAttachmentSentPacketsCountByL3Protocol: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.attachment.sent_packets_count_by_l3_protocol", units: "count")

    # Interconnect Core Network Metrics
    """
    Total capacity of the interconnect connection.
    """
    networkInterconnectCapacity: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.capacity", units: "bytes")

    """
    Operational status of the interconnect connection.
    """
    networkInterconnectOperational: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.operational", units: "ratio")

    """
    Count of packets dropped by the interconnect.
    """
    networkInterconnectDroppedPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.dropped_packets_count", units: "count")

    """
    Count of receive errors on the interconnect.
    """
    networkInterconnectReceiveErrorsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.receive_errors_count", units: "count")

    """
    Count of bytes received through the interconnect.
    """
    networkInterconnectReceivedBytesCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.received_bytes_count", units: "count")

    """
    Count of send errors on the interconnect.
    """
    networkInterconnectSendErrorsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.send_errors_count", units: "count")

    """
    Count of bytes sent through the interconnect.
    """
    networkInterconnectSentBytesCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.sent_bytes_count", units: "count")

    """
    Count of unicast packets received through the interconnect.
    """
    networkInterconnectReceivedUnicastPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.received_unicast_packets_count", units: "count")

    """
    Count of unicast packets sent through the interconnect.
    """
    networkInterconnectSentUnicastPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.sent_unicast_packets_count", units: "count")

    # Interconnect Link Metrics
    """
    Operational status of interconnect links.
    """
    networkInterconnectLinkOperational: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.operational", units: "ratio")

    """
    Receive power level of interconnect links.
    """
    networkInterconnectLinkRxPower: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.rx_power", units: "dBm")

    """
    Transmit power level of interconnect links.
    """
    networkInterconnectLinkTxPower: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.tx_power", units: "dBm")

    # Interconnect Link AAI Metrics
    """
    Count of bytes processed by interconnect link AAI.
    """
    networkInterconnectLinkAaiBytesCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.aai.bytes_count", units: "count")

    """
    Count of packets processed by interconnect link AAI.
    """
    networkInterconnectLinkAaiPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.aai.packets_count", units: "count")

    # Interconnect Link MACsec Metrics
    """
    Operational status of MACsec on interconnect links.
    """
    networkInterconnectLinkMacsecOperational: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.operational", units: "ratio")

    """
    Count of packets dropped on receive by MACsec.
    """
    networkInterconnectLinkMacsecReceiveDroppedPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.receive_dropped_packets_count", units: "count")

    """
    Count of receive errors in MACsec processing.
    """
    networkInterconnectLinkMacsecReceiveErrorsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.receive_errors_count", units: "count")

    """
    Count of control packets received by MACsec.
    """
    networkInterconnectLinkMacsecReceivedControlPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.received_control_packets_count", units: "count")

    """
    Count of data packets received by MACsec.
    """
    networkInterconnectLinkMacsecReceivedDataPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.received_data_packets_count", units: "count")

    """
    Count of packets dropped on send by MACsec.
    """
    networkInterconnectLinkMacsecSendDroppedPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.send_dropped_packets_count", units: "count")

    """
    Count of send errors in MACsec processing.
    """
    networkInterconnectLinkMacsecSendErrorsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.send_errors_count", units: "count")

    """
    Count of control packets sent by MACsec.
    """
    networkInterconnectLinkMacsecSentControlPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.sent_control_packets_count", units: "count")

    """
    Count of data packets sent by MACsec.
    """
    networkInterconnectLinkMacsecSentDataPacketsCount: Metric! @metric(name: "gcp.interconnect.googleapis.com.network.interconnect.link.macsec.sent_data_packets_count", units: "count")

    # Interconnect Quota Metrics
    """
    Usage of interconnect attachments per interconnect quota.
    """
    quotaInterconnectAttachmentsPerInterconnectUsage: Metric! @metric(name: "gcp.compute.googleapis.com.quota.interconnect_attachments_per_interconnect.usage", units: "count")

    """
    Usage of wire groups per interconnect quota.
    """
    quotaWireGroupsPerInterconnectUsage: Metric! @metric(name: "gcp.compute.googleapis.com.quota.wire_groups_per_interconnect.usage", units: "count")

    """
    Whether interconnect attachments per interconnect quota has been exceeded.
    """
    quotaInterconnectAttachmentsPerInterconnectExceeded: Metric! @metric(name: "gcp.compute.googleapis.com.quota.interconnect_attachments_per_interconnect.exceeded", units: "ratio")
}