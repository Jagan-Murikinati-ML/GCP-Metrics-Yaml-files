"""
GCP Cloud Router is a fully distributed and managed Google Cloud service that provides custom dynamic routing for your Virtual Private Cloud (VPC) networks.
"""
type GcpCloudRouter implements Entity & HealthEntity @key(fields: "id")
@telemetryMappingCondition(conditions: [
    {key: "sw.cloud.gcp.cloudrouter.name"},
    {key: "cloud.provider", values: ["gcp"]}
])
{
    # inherited from base Entity
    """
    Unique identifier of an entity
    """
    id: ID!

    """
    Entity type.
    """
    type: String!

    """
    Cloud Router name.
    """
    name: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.cloudrouter.name"]) @property(filterable: true, sortable: true)

    """
    Entity display name / alias. This value is equal to `name` unless it's explicitly overriden.
    """
    displayName: String

    """
    Date and time of entity creation in UTC.
    """
    createdTime: String

    """
    Date and time of last entity update in UTC.
    """
    updatedTime: String

    """
    Date and time when the entity has last received telemetry in UTC.
    """
    lastSeenTime: String

    """
    How long the entity may not be receiving updates/telemetry before it should be considered "unknown".
    The platform may stop doing certain things with the entity when it is in unknown state.
    """
    maxUnknownPeriodMinutes: Int

    """
    Flag telling if given entity is in maintenance mode.
    """
    inMaintenance: Boolean

    """
    Flag telling if given entity is in unknown state.
    Entity gets to unknown state if it doesn't receive eny telemetry for more than 'maxUnknownPeriodMinutes'.
    """
    isUnknown: Boolean

    """
    Set of fields to get to things related to a given entity
    """
    related: RelatedEntityFields

    """
    List of entity extensions that are currently set on given entity
    """
    extensions: [String!] @property(collectionType: SET)

    """
    Entity tags. Tag is a key-value pair, where there may be only single tag value for the same key.
    """
    tags: [KeyValuePair!]

    healthScore: HealthScore

    """
    Cloud provider Name
    """
    cloudProvider: String @telemetryMapping(resourceAttributes: ["cloud.provider"]) @property(
        filterable: false,
        groupable: true,
        sortable: true,
        logicalType: "CloudProviderOption"
    )

    """
    Cloud Account to which this Cloud Router belongs.
    """
    cloudAccount: CloudAccount @relationship(type: "Has", direction: IN) @telemetryRelationship

    """
    GCP Account Number
    """
    cloudAccountNumber: String! @telemetryMapping(resourceAttributes:["cloud.project.id"])

    """
    The cloud account Entity ID
    """
    cloudAccountEntityId: String @telemetryMapping(resourceAttributes: ["sw.entity.cloudaccount.id"])

    """
    Unique ID within SWO to indentify the resource based on cloud attributes
    """
    swid: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.cloudrouter.swid"], hashKeyOrder: 1)

    """
    service category to which it belongs to eg: Networking, Database, Compute.
    """
    serviceCategory: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.service.category"])

    """
    Separate geographic area that GCP uses to house its infrastructure.
    """
    region: String! @telemetryMapping(resourceAttributes: ["cloud.region"]) @property(filterable: true)

    """
    Description of the Cloud Router.
    """
    description: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.cloudrouter.description"]) @property(filterable: true, sortable: true)

    """
    Network interfaces configuration including name and IP range information.
    """
    interfaces: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.cloudrouter.interfaces"]) @property(filterable: true, sortable: true)

    """
    BGP peers configuration including name, interface name, peer ASN, and advertised IP ranges.
    """
    bgpPeers: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.cloudrouter.bgp.peers"]) @property(filterable: true, sortable: true)

    """
    BGP configuration including ASN and advertised IP ranges.
    """
    bgpConfig: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.cloudrouter.bgp.config"]) @property(filterable: true, sortable: true)

    """
    NAT configuration including name, subnetworks, and source IP ranges for NAT.
    """
    natsConfig: String @telemetryMapping(resourceAttributes: ["sw.cloud.gcp.cloudrouter.nats.config"]) @property(filterable: true, sortable: true)

    # Cloud Router Session Status Metrics
    """
    BFD session up status indicating if BFD session is active.
    """
    bfdSessionUp: Metric! @metric(name: "gcp.router.googleapis.com.bfd.session_up", units: "ratio")

    """
    BGP session up status indicating if BGP session is active.
    """
    bgpSessionUp: Metric! @metric(name: "gcp.router.googleapis.com.bgp.session_up", units: "ratio")

    """
    Router up status indicating if the cloud router is operational.
    """
    routerUp: Metric! @metric(name: "gcp.router.googleapis.com.router_up", units: "ratio")

    # Cloud Router Session Event Metrics
    """
    Count of BFD session flap events indicating session instability.
    """
    bfdSessionFlapEventsCount: Metric! @metric(name: "gcp.router.googleapis.com.bfd.session_flap_events_count", units: "count")

    """
    Count of BGP sessions that are currently down.
    """
    bgpSessionsDownCount: Metric! @metric(name: "gcp.router.googleapis.com.bgp_sessions_down_count", units: "count")

    """
    Count of BGP sessions that are currently up.
    """
    bgpSessionsUpCount: Metric! @metric(name: "gcp.router.googleapis.com.bgp_sessions_up_count", units: "count")

    # BFD Control Metrics
    """
    BFD control receive intervals for session monitoring.
    """
    bfdControlReceiveIntervals: Metric! @metric(name: "gcp.router.googleapis.com.bfd.control.receive_intervals", units: "milliseconds")

    """
    Count of BFD control packets received.
    """
    bfdControlReceivedPacketsCount: Metric! @metric(name: "gcp.router.googleapis.com.bfd.control.received_packets_count", units: "count")

    """
    Count of BFD control packets that were rejected.
    """
    bfdControlRejectedPacketsCount: Metric! @metric(name: "gcp.router.googleapis.com.bfd.control.rejected_packets_count", units: "count")

    """
    BFD control transmit intervals for session monitoring.
    """
    bfdControlTransmitIntervals: Metric! @metric(name: "gcp.router.googleapis.com.bfd.control.transmit_intervals", units: "milliseconds")

    """
    Count of BFD control packets transmitted.
    """
    bfdControlTransmittedPacketsCount: Metric! @metric(name: "gcp.router.googleapis.com.bfd.control.transmitted_packets_count", units: "count")

    # BGP Route Metrics
    """
    Count of best received routes from BGP peers.
    """
    bestReceivedRoutesCount: Metric! @metric(name: "gcp.router.googleapis.com.best_received_routes_count", units: "count")

    """
    Count of routes received via BGP protocol.
    """
    bgpReceivedRoutesCount: Metric! @metric(name: "gcp.router.googleapis.com.bgp.received_routes_count", units: "count")

    """
    Count of routes sent via BGP protocol.
    """
    bgpSentRoutesCount: Metric! @metric(name: "gcp.router.googleapis.com.bgp.sent_routes_count", units: "count")

    """
    Total count of routes sent by the cloud router.
    """
    sentRoutesCount: Metric! @metric(name: "gcp.router.googleapis.com.sent_routes_count", units: "count")
}